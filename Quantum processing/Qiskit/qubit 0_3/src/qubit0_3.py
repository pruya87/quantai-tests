# -*- coding: utf-8 -*-
"""Qubit0-3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fBE9yOy7nbCjWKpqSDw0OxlJrxXb6at-
"""

!pip install qiskit --quiet
!pip install qiskit_aer --quiet
!pip install pylatexenc --quiet

"""The GHZ state is a superposition of all qubits being 0 and all qubits being 1. Until you measure, the system is in both states at once.

When you measure any one qubit:

    If it’s 0, the others collapse to 0 as well.

    If it’s 1, the others collapse to 1.
"""

from qiskit import QuantumCircuit, transpile
from qiskit_aer import AerSimulator
from qiskit.visualization import plot_histogram
import matplotlib.pyplot as plt

# Create 3-qubit circuit
qc = QuantumCircuit(3, 3)

# Step 1: Create GHZ state
qc.h(0)        # Hadamard on qubit 0 to create superposition
qc.cx(0, 1)    # CNOT from qubit 0 to 1
qc.cx(0, 2)    # CNOT from qubit 0 to 2

# Step 2: Measure all qubits
qc.measure(range(3), range(3))

qc.draw('mpl')

# Run simulation
simulator = AerSimulator()
compiled = transpile(qc, simulator)
result = simulator.run(compiled, shots=1024).result()

counts = result.get_counts()
print("Measurement results:", counts)

# Plot results
plot_histogram(counts)
plt.show()